# ----------------------------------------------------------------------------
[basic_options] # Basic options for this experiment. Don't change this header
# ----------------------------------------------------------------------------

# random_seed should be a number. Comment out random_seed to use system time as the seed.
# random_seed = 1606103470501

# Search strategy
# Options: random, hillclimb, gp, ccegp
# strategy = random
# strategy = hillclimb
# strategy = gp
strategy = ccegp

# Number of runs per experiment
num_runs_per_experiment = 2

# Number of fitness evals per run (unless strategy overrides it)
num_fitness_evals_per_run = 1000

# Log file path
log_file_path = logs/default.txt

# Attacker Solution file path
attacker_solution_file_path = solutions/defaultAttackerSolution.txt

# Defender Solution file path
defender_solution_file_path = solutions/defaultDefenderSolution.txt

# Highest score world file path
high_score_world_file_path = worlds/defaultHighScoreWorld.txt


# ----------------------------------------------------------------------------
[ccegp_options] # Options for Competitive Co-Evolutionary Genetic Programming Search. Don't change this header
# ----------------------------------------------------------------------------
# Attacker Population size
attacker_mu = 100

# Attacker Offspring size
attacker_lambda = 50

# Attacker Dmax for initialization
attacker_dmax_init = 7

# Attacker Dmax overall (post-initialization)
attacker_dmax_overall = 9

# Attacker Parent selection method.
# Options: fitness_proportional_selection, overselection
# attacker_parent_selection = fitness_proportional_selection
attacker_parent_selection = overselection

# If using Overselection for Attacker, what top % makes the top group?
# 32% = rule of thumb found repeatedly in literature search
attacker_overselection_top = 0.32

# Attacker Mutation probability: chance that variation will be mutation (otherwise recombination)
attacker_p_m = 0.05

# Attacker Survival selection method.
# Options: truncation, k_tournament_without_replacement
attacker_survival_selection = truncation
# attacker_survival_selection = k_tournament_without_replacement

# AttackerTournament size for survival selection, if using k-tournament
attacker_tournament_size_for_survival_selection = 10

# Attacker Parsimony technique
# Options: depth, size
# attacker_parsimony_technique = depth
attacker_parsimony_technique = size

# Attacker Parsimony pressure penalty coefficient
attacker_pppc = 0.5

# Defender Population size
defender_mu = 100

# Defender Offspring size
defender_lambda = 50

# Defender Dmax for initialization
defender_dmax_init = 7

# Defender Dmax overall (post-initialization)
defender_dmax_overall = 9

# Defender Parent selection method.
# Options: fitness_proportional_selection, overselection
# defender_parent_selection = fitness_proportional_selection
defender_parent_selection = overselection

# If using Overselection for Defender, what top % makes the top group?
# 32% = rule of thumb found repeatedly in literature search
defender_overselection_top = 0.32

# Defender Mutation probability: chance that variation will be mutation (otherwise recombination)
defender_p_m = 0.05

# Defender Survival selection method.
# Options: truncation, k_tournament_without_replacement
defender_survival_selection = truncation
# defender_survival_selection = k_tournament_without_replacement

# Defender Tournament size for survival selection, if using k-tournament
defender_tournament_size_for_survival_selection = 10

# Defender Parsimony technique
# Options: depth, size
# defender_parsimony_technique = depth
defender_parsimony_technique = size

# Defender Parsimony pressure penalty coefficient
defender_pppc = 0.5

# Does the defender strategy evolve (ccegp) or follow the Saritas model?
# Setting Sartias model allows debugging the attacker evolution
# defender_strategy = ccegp
defender_strategy = saritas

# Bounds for randomly-generated constant values in the tree
rand_constant_low = -10000.0
rand_constant_high = 10000.0

# Termination method
# If choosing number_of_evals, enter that number in "num_fitness_evals_per_run" above
# Options: number_of_evals, convergence
termination = number_of_evals
# termination = convergence

# n for termination convergence criterion, if using that termination method
n_for_convergence = 100

# Root filename for CIAO data and plot files
ciao_file_path_root = default

# Log file for parsimony pressure data
parsimony_log_file_path = data/defaultParsimonyLog.txt

